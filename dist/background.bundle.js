(()=>{var e={915:e=>{"use strict";e.exports=require("@tensorflow/tfjs")}},o={};function r(t){var n=o[t];if(void 0!==n)return n.exports;var a=o[t]={exports:{}};return e[t](a,a.exports,r),a.exports}(()=>{console.log("Background script loaded");const e=r(915);console.log("loaded tf");const o=chrome.runtime.getURL("my_model/");let t,n,a,s;async function c(){console.log("Init function called"),await async function(){console.log("created model");const r=o+"model.json",a=o+"metadata.json",[s,c]=await Promise.all([fetch(r).then((e=>e.arrayBuffer())),fetch(a).then((e=>e.json()))]);n=c.wordLabels;const i=await e.loadLayersModel(e.io.browserFiles([new File([s],"model.json")]));t=speechCommands.create("BROWSER_FFT",void 0,i,c)}(),chrome.tabCapture.capture({audio:!0,video:!1},(function(e){if(chrome.runtime.lastError)return void console.error("Error capturing tab:",chrome.runtime.lastError);if(!e)return void console.error("Unable to capture audio. Stream is undefined.");a=new AudioContext;const o=a.createMediaStreamSource(e);s=a.createAnalyser(),s.fftSize=1024,o.connect(s),t.listen((e=>{e.scores;for(let o=0;o<n.length;o++){const r=n[o]+": "+e.scores[o].toFixed(2);console.log(r)}}),{includeSpectrogram:!0,probabilityThreshold:.75,invokeCallbackOnNoiseAndUnknown:!0,overlapFactor:.5}),i()}))}function i(){const e=s.frequencyBinCount,o=new Float32Array(e);s.getFloatFrequencyData(o),requestAnimationFrame(i)}chrome.action.onClicked.addListener((e=>{c()})),chrome.runtime.onMessage.addListener(((e,o,r)=>("start"===e.action&&(c(),console.log("sending response from bg"),r({status:"started"})),!0)))})()})();